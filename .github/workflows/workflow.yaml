name: Medhead-app workflow
on:
  push:
    branches: [ main ]

jobs:
  project-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # - uses: browser-actions/setup-chrome@latest
      # - run: chrome --version

      - name: Install Xvfb
        run: sudo apt-get install -y xvfb

      # - name: Run E2e tests
      #   working-directory: ./medhead-front/e2e
      #   run: npm run e2e

  check-changes:  
    runs-on: ubuntu-latest
    needs: project-build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      # MS-hospital-management
      - name: Check for changes in ms-hospital-management
        id: check_mshm
        run: |
          if [[ -n $(git --no-pager diff --name-only ${{ github.event.before }} ${{ github.sha }} -- ms-hospital-management/) ]]; then
            echo "Changes detected in mshm."
            echo "::set-output name=changed::true"
            echo "CHANGED_MSHM=true" >> $GITHUB_ENV
            echo "test : ${CHANGED_MSHM}"
          else
            echo "No changes detected in mshm."
            echo "::set-output name=changed::false"
            echo "CHANGED_MSHM=false" >> $GITHUB_ENV
          fi

      # MS-emergency-management
      - name: Check for changes in ms-emergency-management
        id: check_msem
        run: |
          if [[ -n $(git --no-pager diff --name-only ${{ github.event.before }} ${{ github.sha }} -- ms-emergency-management/) ]]; then
            echo "Changes detected in msem."
            echo "::set-output name=changed::true"
            echo "CHANGED_MSEM=true" >> $GITHUB_ENV
          else
            echo "No changes detected in msem."
            echo "::set-output name=changed::false"
            echo "CHANGED_MSEM=false" >> $GITHUB_ENV
          fi

      # MS-emergency-dispatcher
      - name: Check for changes in ms-emergency-dispatcher
        id: check_msed
        run: |
          if [[ -n $(git --no-pager diff --name-only ${{ github.event.before }} ${{ github.sha }} -- ms-emergency-disptacher/) ]]; then
            echo "Changes detected in msed."
            echo "::set-output name=changed::true"
            echo "CHANGED_MSED=true" >> $GITHUB_ENV
          else
            echo "No changes detected in msed."
            echo "::set-output name=changed::false"
            echo "CHANGED_MSED=false" >> $GITHUB_ENV
          fi
  tests:
    runs-on: ubuntu-latest
    needs: check-changes
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies for medhead-front
        working-directory: ./medhead-front
        run: npm install

      # MS-hospital-management
      - name: Build and Test MSHM
        if: ${{ env.CHANGED_MSHM == true }}
        working-directory: ./ms-hospital-management
        run: |
          ./mvnw clean package
          ./mvnw test

      # MS-emergency-management
      - name: Build and Test MSEM
        if: ${{ env.CHANGED_MSEM == true }}
        working-directory: ./ms-emergency-management
        run: |
          ./mvnw clean package
          ./mvnw test

      # MS-emergency-dispatcher
      - name: Build and Test MSED
        if: ${{ env.CHANGED_MSED == true }}
        working-directory: ./ms-emergency-dispatcher
        run: |
          ./mvnw clean package
          ./mvnw test 

      - name: Start MS-hospital-management
        working-directory: ./ms-hospital-management
        run: |
          ./mvnw clean install
          ./mvnw spring-boot:run &

      # - name: Wait for Micro-Services to Start
      #   run: sleep 15

      - name: Start MS-emergency-management
        working-directory: ./ms-emergency-management
        run: ./mvnw spring-boot:run &

      # - name: Wait for Micro-Services to Start
      #   run: sleep 15

      - name: Start MS-emergency-dispatcher
        working-directory: ./ms-emergency-dispatcher
        run: ./mvnw spring-boot:run &

      # - name: Wait for Micro-Services to Start
      #   run: sleep 15

      - name: Build Angular App
        working-directory: ./medhead-front
        run: npm run start & 

      # - name: Wait for Micro-Services to Start
      #   run: sleep 5       

      - name: Run E2E Tests with Xvfb
        working-directory: ./medhead-front/e2e
        run: xvfb-run --auto-servernum --server-args="-screen 0 1920x1080x24" node bookBed.js           

  publish:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Get ENV variables
        run: |
          echo "changed mshm: ${CHANGED_MSHM}"
          echo "changed msem: $CHANGED_MSEM"
          echo "changed msed: $CHANGED_MSED"
        env:
          CHANGED_MSHM: ${{ env.CHANGED_MSHM }}
          CHANGED_MSEM: ${{ env.CHANGED_MSEM }}
          CHANGED_MSED: ${{ env.CHANGED_MSED }}

      - name: Publish Docker Image MSMH
        if: ${{ env.CHANGED_MSHM == true }}
        working-directory: ./ms-hospital-management
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          docker build -t yvalero/ms-hospital-management:latest .
          docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_TOKEN
          docker push yvalero/ms-hospital-management:latest

      - name: Publish Docker Image MSEM
        # if: ${{ steps.check_msem.outputs.changed == 'true' }}
        if: ${{ env.CHANGED_MSEM == true }}
        working-directory: ./ms-emergency-management
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          docker build -t yvalero/ms-emergency-management:latest .
          docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_TOKEN
          docker push yvalero/ms-emergency-management:latest

      - name: Publish Docker Image MSED
        # if: ${{ steps.check_msed.outputs.changed == 'true' }}
        if: ${{ env.CHANGED_MSED == true }}
        working-directory: ./ms-emergency-dispatcher
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          docker build -t yvalero/ms-emergency-dispatcher:latest .
          docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_TOKEN
          docker push yvalero/ms-emergency-dispatcher:latest
